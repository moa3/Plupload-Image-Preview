<!doctype html>
<html>
<head>
	<meta charset="utf-8" />

	<title>
		Showing Plupload Image Previews Using Base64-Encoded Data Urls
	</title>

	<link rel="stylesheet" type="text/css" href="./assets/css/styles.css"></link>
</head>
<body>

	<h1>
		Showing Plupload Image Previews Using Base64-Encoded Data Urls
	</h1>

	<div id="uploader" class="uploader">

		<a id="selectFiles" href="#">Select Files</a>

	</div>

	<ul class="uploads">
		<!-- Will be populated dynamically with LI/IMG tags. -->
	</ul>


	<!-- Load and initialize scripts. -->
	<script type="text/javascript" src="./assets/jquery/jquery.js"></script>
	<script type="text/javascript" src="./assets/plupload/js/moxie.js"></script>
	<script type="text/javascript">

		(function( $ ) {
     fileInput = new mOxie.FileInput({
				browse_button: "selectFiles",
				container: "uploader",
        multiple: true,
        runtime_order: 'flash',
        accept: 'image/jpeg',
				swf_url: "./assets/plupload/js/Moxie.swf"
      });
     fileInput.onchange = loadFiles;
     fileInput.onready = function() {
      console.log('ready');
      return $("#" + fileInput.ruid + "_container").css({
        'z-index': 1001,
        left: '0px',
        top: '-10px'
        });
     };
     fileInput.init();


			function loadFiles() {

				console.log( "Files selected." );

				// Show the client-side preview using the loaded File.
				for ( var i = 0 ; i < fileInput.files.length ; i++ ) {

					showImagePreview( fileInput.files[ i ] );

				}

			}


			function showImagePreview( file ) {
        
				var image = $( new Image() );
				var preloader = new mOxie.Image();

				preloader.onload = function() {

					// This will scale the image (in memory) before it
					// tries to render it. This just reduces the amount
					// of Base64 data that needs to be rendered.
					//preloader.downsize( 300, 300 );

					// Now that the image is preloaded, grab the Base64
					// encoded data URL. This will show the image 
					// without making an Network request using the 
					// client-side file binary.
					image.prop( "src", preloader.getAsDataURL() );

          var item = $( "<li></li>" ).prependTo( $("ul.uploads") );
          image.appendTo( item );

					// NOTE: These previews "work" in the FLASH runtime.
					// But, they look seriously junky-to-the-monkey. 
					// Looks like they are only using like 256 colors.

				};

				preloader.load( file );

			}


		})( jQuery );

	</script>

</body>
</html>
